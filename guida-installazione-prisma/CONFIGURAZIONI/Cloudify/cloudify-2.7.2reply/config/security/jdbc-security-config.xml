<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">

<!--  
     Spring Security sample configuration file.
     For detailed information, refer to the GigaSpaces documentation section on Spring-based Security.
 -->
 
<beans>
	<bean id="authenticationManager"
		class="org.springframework.security.authentication.ProviderManager">
		<property name="providers">
			<list>
				<ref bean="daoAuthenticationProvider" />
			</list>
		</property>
	</bean>

	<bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="daoUserDetailsService" />
		<property name="passwordEncoder">
			<bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
		</property>
	</bean>

	<bean id="daoUserDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<property name="dataSource" ref="jdbcDataSource" />
		<property name="usersByUsernameQuery">
			<value>SELECT username,password,'true' FROM users WHERE username = ?</value>
		</property>
		<property name="authoritiesByUsernameQuery">
			<value>SELECT username,authority FROM authorities WHERE username = ?</value>
		</property>
		<property name="enableGroups" value="true"/>
		<property name="groupAuthoritiesByUsernameQuery">
			<value>SELECT g.id, g.group_name, ga.authority FROM groups g, group_members gm, group_authorities ga
			 where gm.username = ? and g.id = ga.group_id and g.id = gm.group_id</value>
		</property>
	</bean>

	<bean id="jdbcDataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:hsql://localhost:9001" />
	</bean>
	
</beans>
